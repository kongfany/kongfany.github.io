<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on 大胖狗来了</title>
    <link>https://kongfany.github.io/categories/python/</link>
    <description>Recent content in Python on 大胖狗来了</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 29 Jul 2021 16:16:25 +0800</lastBuildDate><atom:link href="https://kongfany.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>正则表达式的应用</title>
      <link>https://kongfany.github.io/post/python24%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Thu, 29 Jul 2021 16:16:25 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python24%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>正则表达式相关知识 在编写处理字符串的程时，经常会遇到在一段文本中查找符合某些规则的字符串的需求，正则表达式就是用于描述这些规则的工具，换句话</description>
    </item>
    
    <item>
      <title>图形用户界面和游戏开发</title>
      <link>https://kongfany.github.io/post/python23%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/</link>
      <pubDate>Wed, 28 Jul 2021 22:20:26 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python23%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/</guid>
      <description>基于tkinter模块的GUI GUI是图形用户界面的缩写，图形化的用户界面对使用过计算机的人来说应该都不陌生，在此也无需进行赘述。Pytho</description>
    </item>
    
    <item>
      <title>文件读写和异常处理</title>
      <link>https://kongfany.github.io/post/python22%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</link>
      <pubDate>Tue, 27 Jul 2021 20:31:34 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python22%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</guid>
      <description>实际开发中常常会遇到对数据进行持久化的场景，所谓持久化是指将数据从无法长久保存数据的存储介质（通常是内存）转移到可以长久保存数据的存储介质（</description>
    </item>
    
    <item>
      <title>Python标准库初探</title>
      <link>https://kongfany.github.io/post/python21python%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Tue, 27 Jul 2021 11:48:24 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python21python%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/</guid>
      <description>base64 - Base64编解码模块 Base64是一种基于64个可打印字符来表示二进制数据的方法。由于$log _{2}64=6$，所以Base64以6</description>
    </item>
    
    <item>
      <title>函数的高级应用</title>
      <link>https://kongfany.github.io/post/python20%E5%87%BD%E6%95%B0%E7%9A%84%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/</link>
      <pubDate>Tue, 27 Jul 2021 10:12:56 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python20%E5%87%BD%E6%95%B0%E7%9A%84%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/</guid>
      <description>装饰器 装饰器是Python中用一个函数装饰另外一个函数或类并为其提供额外功能的语法现象。装饰器本身是一个函数，它的参数是被装饰的函数或类，它</description>
    </item>
    
    <item>
      <title>函数使用进阶</title>
      <link>https://kongfany.github.io/post/python19%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Mon, 26 Jul 2021 16:34:33 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python19%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E8%BF%9B%E9%98%B6/</guid>
      <description>关键字参数 下面是一个判断传入的三条边长能否构成三角形的函数，在调用函数传入参数时，我们可以指定参数名，也可以不指定参数名，代码如下所示。 1 2</description>
    </item>
    
    <item>
      <title>面向对象编程应用</title>
      <link>https://kongfany.github.io/post/python18%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 19 Jul 2021 16:28:18 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python18%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%BA%94%E7%94%A8/</guid>
      <description>奥特曼打小怪兽 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63</description>
    </item>
    
    <item>
      <title>面向对象编程进阶</title>
      <link>https://kongfany.github.io/post/python17%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Sun, 18 Jul 2021 23:04:34 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python17%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E8%BF%9B%E9%98%B6/</guid>
      <description>可见性和属性装饰器 在很多面向对象编程语言中，对象的属性通常会被设置为私有（private）或受保护（protected）的成员，简单的说就是</description>
    </item>
    
    <item>
      <title>面向对象编程入门</title>
      <link>https://kongfany.github.io/post/python16%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 18 Jul 2021 22:10:54 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python16%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%85%A5%E9%97%A8/</guid>
      <description>面向对象：&amp;quot;把一组数据结构和处理它们的方法组成对象（object），把相同行为的对象归纳为类（class），通过类的封装（enca</description>
    </item>
    
    <item>
      <title>字典</title>
      <link>https://kongfany.github.io/post/python15/</link>
      <pubDate>Tue, 13 Jul 2021 15:51:19 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python15/</guid>
      <description>迄今为止，我们已经为大家介绍了Python中的三种容器型数据类型，但是这些数据类型还不足以帮助我们解决所有的问题。例如，我们要保存一个人的信</description>
    </item>
    
    <item>
      <title>集合</title>
      <link>https://kongfany.github.io/post/python14/</link>
      <pubDate>Mon, 12 Jul 2021 19:18:40 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python14/</guid>
      <description>在学习了列表和元组之后，我们再来学习一种容器型的数据类型，它的名字叫集合（set）。通常我们对集合的定义是“把一定范围的、确定的、可以区别的</description>
    </item>
    
    <item>
      <title>列表和元组的应用</title>
      <link>https://kongfany.github.io/post/python13/</link>
      <pubDate>Sun, 11 Jul 2021 16:39:00 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python13/</guid>
      <description>最大值最小值 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 &amp;#34;&amp;#34;&amp;#34; 找出列表中最大或最小的元素 &amp;#34;&amp;#34;&amp;#34; def main(): fruits = [&amp;#39;grape&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;strawberry&amp;#39;, &amp;#39;waxberry&amp;#39;, &amp;#39;pitaya&amp;#39;] # 直接使用内置的max和min函数找</description>
    </item>
    
    <item>
      <title>元组</title>
      <link>https://kongfany.github.io/post/python12/</link>
      <pubDate>Fri, 09 Jul 2021 17:42:21 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python12/</guid>
      <description>上一节课为大家讲解了Python中的列表，它是一种容器型数据类型，我们可以通过定义列表类型的变量来保存和操作多个元素。当然，Python中容</description>
    </item>
    
    <item>
      <title>列表</title>
      <link>https://kongfany.github.io/post/python11/</link>
      <pubDate>Fri, 09 Jul 2021 15:15:40 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python11/</guid>
      <description>在Python中我们可以通过容器类型的变量来保存和操作多个数据，我们首先为大家介绍列表（list）这种新的数据类型。 定义和使用列表 在Pyth</description>
    </item>
    
    <item>
      <title>函数和字符串的应用</title>
      <link>https://kongfany.github.io/post/python10/</link>
      <pubDate>Fri, 09 Jul 2021 10:23:46 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python10/</guid>
      <description>为什么字符串类型（str）可以通过调用方法的方式进行操作，而之前我们用到的数值类型（如int、float）却没有可以调用的方法。在Pytho</description>
    </item>
    
    <item>
      <title>字符串</title>
      <link>https://kongfany.github.io/post/python09/</link>
      <pubDate>Thu, 08 Jul 2021 21:35:20 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python09/</guid>
      <description>字符串的定义 所谓字符串，就是由零个或多个字符组成的有限序列。 在Python程序中，如果我们把单个或多个字符用单引号或者双引号包围起来，就可以</description>
    </item>
    
    <item>
      <title>函数和模块</title>
      <link>https://kongfany.github.io/post/python08/</link>
      <pubDate>Thu, 08 Jul 2021 16:36:30 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python08/</guid>
      <description>函数的作用 “代码有很多种坏味道，重复是最坏的一种！”。要写出高质量的代码首先要解决的就是重复代码的问题。我们可以将计算阶乘的功能封装到一个称</description>
    </item>
    
    <item>
      <title>分支和循环结构的应用</title>
      <link>https://kongfany.github.io/post/python07/</link>
      <pubDate>Thu, 08 Jul 2021 10:23:22 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python07/</guid>
      <description>经典案例 例1：寻找水仙花数 水仙花数也被称为超完全数字不变数、自恋数、自幂数、阿姆斯特朗数，它是一个3位数，该数字每个位上数字的立方之和正好等</description>
    </item>
    
    <item>
      <title>循环结构</title>
      <link>https://kongfany.github.io/post/python06/</link>
      <pubDate>Wed, 07 Jul 2021 21:00:49 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python06/</guid>
      <description>for-in循环 如果明确的知道循环执行的次数，推荐使用for-in循环。被for-in循环控制的语句块也是通过缩进的方式来确定的。 1 2 3 4 5</description>
    </item>
    
    <item>
      <title>分支结构</title>
      <link>https://kongfany.github.io/post/python05/</link>
      <pubDate>Wed, 07 Jul 2021 16:13:31 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python05/</guid>
      <description>分支结构也叫选择结构。 if语句的使用 在Python中，要构造分支结构可以使用if、elif和else关键字。所谓关键字就是有特殊含义的单词，</description>
    </item>
    
    <item>
      <title>Python语言元素之运算符</title>
      <link>https://kongfany.github.io/post/python04/</link>
      <pubDate>Tue, 06 Jul 2021 16:32:59 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python04/</guid>
      <description>运算符 以下表格是按照运算符的优先级从上到下列出的。所谓优先级，就是在同一个运算的表达式中，如果出现了多个运算符，应该先执行哪个运算再执行哪个</description>
    </item>
    
    <item>
      <title>Python语言元素之变量</title>
      <link>https://kongfany.github.io/post/python03/</link>
      <pubDate>Tue, 06 Jul 2021 15:18:30 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python03/</guid>
      <description>变量和类型 变量是数据的载体，简单来说就是一块来保存数据的内存空间，变量的值可以被读取和修改。 Python中数据类型很多，而且允许我们自定义新</description>
    </item>
    
    <item>
      <title>PyCharm2021使用教程</title>
      <link>https://kongfany.github.io/post/python02/</link>
      <pubDate>Mon, 05 Jul 2021 15:16:19 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python02/</guid>
      <description>下载安装 看前一篇 界面/菜单栏介绍 界面及常用操作介绍 代码补全 file-&amp;gt;settings,找到editor-&amp;gt;general-&amp;g</description>
    </item>
    
    <item>
      <title>Pyhon初识及安装</title>
      <link>https://kongfany.github.io/post/pyhon01/</link>
      <pubDate>Sun, 04 Jul 2021 16:39:31 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/pyhon01/</guid>
      <description>Python介绍 Python是一种广泛使用的解释型、高级编程语言。python有3.x和2.x量大版本，并且不兼容（使用3.x） 解释型&amp;md</description>
    </item>
    
  </channel>
</rss>
