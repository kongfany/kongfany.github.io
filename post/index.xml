<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 大胖狗来了</title>
    <link>https://kongfany.github.io/post/</link>
    <description>Recent content in Posts on 大胖狗来了</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 02 Jan 2022 13:34:50 +0800</lastBuildDate><atom:link href="https://kongfany.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FedMVT</title>
      <link>https://kongfany.github.io/post/fedmvt/</link>
      <pubDate>Sun, 02 Jan 2022 13:34:50 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/fedmvt/</guid>
      <description>Semi-supervised Vertical Federated Learning with MultiView Training FedMVT：带多视图训练的半监督垂直联合学习 Abstract 垂直联邦学习(VFL)使各方能够基于相同样本的分布特征构建健壮的共享机器学习模</description>
    </item>
    
    <item>
      <title>联邦学习(Federated Learning)</title>
      <link>https://kongfany.github.io/post/federated-learning/</link>
      <pubDate>Mon, 20 Dec 2021 19:22:19 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/federated-learning/</guid>
      <description>简要分析 数据是属于用户的，我们既不能不作申请的使用它们，还要保护数据的私密性，有没有什么颁发安全高效的实现数据合作呢？2016年，为解决An</description>
    </item>
    
    <item>
      <title>联邦学习综述</title>
      <link>https://kongfany.github.io/post/fl_faq/</link>
      <pubDate>Sat, 18 Dec 2021 17:03:03 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/fl_faq/</guid>
      <description>原论文 原论文翻译 视频总结 视频文档 概念 什么是联邦学习？ 联邦学习（FL）是一种机器学习设定，其中许多客户端（例如，移动设备或整个组织）在中央服务</description>
    </item>
    
    <item>
      <title>PFL联邦学习开源框架</title>
      <link>https://kongfany.github.io/post/fl_pfl/</link>
      <pubDate>Fri, 17 Dec 2021 21:05:53 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/fl_pfl/</guid>
      <description>PFL联邦学习框架是基于pytorch开发的集成了多种联邦学习算法的联邦学习框架。 使用PFL框架可以通过简单的代码编写，和参数设置来完成一个</description>
    </item>
    
    <item>
      <title>3D人体重建</title>
      <link>https://kongfany.github.io/post/%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA/</link>
      <pubDate>Wed, 15 Dec 2021 17:37:34 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA/</guid>
      <description>图像重建 图像重建：通过物体外部测量的数据，经数字处理获得三维物体的形状信息的技术。 SMPL模型 它是通过输入一张RGB 的人体图像和由openp</description>
    </item>
    
    <item>
      <title>ex1线性回归</title>
      <link>https://kongfany.github.io/post/mlex1-/</link>
      <pubDate>Wed, 15 Dec 2021 12:12:46 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/mlex1-/</guid>
      <description>1 2 3 import numpy as np import pandas as pd import matplotlib.pyplot as plt 1 2 A = np.eye(5) A array([[1., 0., 0., 0., 0.], [0., 1., 0., 0., 0.], [0., 0., 1., 0., 0.], [0., 0., 0., 1., 0.], [0., 0., 0., 0., 1.]]) 单变量的线性回归 整个2的部分需要根据城市人口数量</description>
    </item>
    
    <item>
      <title>联邦学习</title>
      <link>https://kongfany.github.io/post/fl2/</link>
      <pubDate>Sat, 30 Oct 2021 13:19:05 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/fl2/</guid>
      <description>背景介绍 在追逐AI的同时却忽略了一点，AI是靠数据来喂的，而且是大量优质数据。 现实生活中，除了少数巨头公司能够满足，绝大多数企业都存在数据量</description>
    </item>
    
    <item>
      <title>重新排序得到 2 的幂</title>
      <link>https://kongfany.github.io/post/lcode869/</link>
      <pubDate>Thu, 28 Oct 2021 21:20:26 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/lcode869/</guid>
      <description>给定正整数 N ，我们按任何顺序（包括原始顺序）将数字重新排序，注意其前导数字不能为零。 如果我们可以通过上述方式得到 2 的幂，返回 true；否则，</description>
    </item>
    
    <item>
      <title>有效三角形的个数</title>
      <link>https://kongfany.github.io/post/lcode611/</link>
      <pubDate>Tue, 26 Oct 2021 20:57:15 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/lcode611/</guid>
      <description>给定一个包含非负整数的数组，你的任务是统计其中可以组成三角形三条边的三元组个数。 1 2 3 4 5 6 7 输入: [2,2,3,4] 输出: 3 解释: 有效的组合是: 2,3,4 (使用第</description>
    </item>
    
    <item>
      <title>求众数2</title>
      <link>https://kongfany.github.io/post/lcode229/</link>
      <pubDate>Fri, 22 Oct 2021 22:23:27 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/lcode229/</guid>
      <description>给定一个大小为 n 的整数数组，找出其中所有出现超过 ⌊ n/3 ⌋ 次的元素。 方法一：哈希统计 思路:我们用哈希统计数组中每个元素出现的次数，设数组的长度为</description>
    </item>
    
    <item>
      <title>Linear Regression with Multiple Variables</title>
      <link>https://kongfany.github.io/post/ml3/</link>
      <pubDate>Fri, 22 Oct 2021 11:52:33 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/ml3/</guid>
      <description>多变量线性回归(Linear Regression with Multiple Variables) Multiple Features：多维特征 目前为止，我们探讨了单变量/特征的回归模型，现在我们对房价模型增加更多的特征</description>
    </item>
    
    <item>
      <title>Jupyter</title>
      <link>https://kongfany.github.io/post/jupyter/</link>
      <pubDate>Tue, 19 Oct 2021 16:28:37 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/jupyter/</guid>
      <description>pip不能使用： https://blog.csdn.net/hll19950830/article/details/88551506 安装： https://www.zhihu.com/collection/261855801 https://www.jianshu.com/p/91365f343585 https://blog.csdn.net/liboshi123/article/details/116809849 一劳永逸配置pip源（推荐）：只需在windows命令行中输入一行命令，即可永久设置pip下载源为国内源 1 pip config</description>
    </item>
    
    <item>
      <title>MATLAB</title>
      <link>https://kongfany.github.io/post/matlab/</link>
      <pubDate>Sun, 19 Sep 2021 20:17:05 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/matlab/</guid>
      <description>安装教程 视频教程 MATLAB变量命名规则 MATLAB数据类型 数字 字符与字符串 s = &amp;lsquo;a&amp;rsquo; abs(s) %ASCLL码 char(97) %字符 num2str(65) %数字 length(str) %计算字符串的长度 矩阵 A</description>
    </item>
    
    <item>
      <title>Linear Regression With One Variable</title>
      <link>https://kongfany.github.io/post/ml2/</link>
      <pubDate>Wed, 01 Sep 2021 22:43:33 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/ml2/</guid>
      <description>二、单变量线性回归(Linear Regression with One Variable) Model representation：模型描述 在监督学习中我们有一个数据集，这个数据集被称训练集。（Tra</description>
    </item>
    
    <item>
      <title>Machine Learning</title>
      <link>https://kongfany.github.io/post/ml1/</link>
      <pubDate>Tue, 31 Aug 2021 13:22:44 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/ml1/</guid>
      <description>吴恩达《机器学习》 视频 讲义 笔记 作业 Jupyter Notebook介绍、安装及使用教程 机器学习数学基础 python代码 一、引言(Introduction)</description>
    </item>
    
    <item>
      <title>Python慕课嵩天</title>
      <link>https://kongfany.github.io/post/pythonmooc/</link>
      <pubDate>Tue, 17 Aug 2021 13:59:06 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/pythonmooc/</guid>
      <description>视频 作业 基本数据类型 数值运算函数： abs(x):绝对值函数 divmod(x,y):商余（x//y,x%y）。divmod(10,3)=(3,</description>
    </item>
    
    <item>
      <title>Springboot项目</title>
      <link>https://kongfany.github.io/post/springboot%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Sun, 08 Aug 2021 09:56:30 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/springboot%E9%A1%B9%E7%9B%AE/</guid>
      <description>Spring Boot+Vue vue 下载nodejs 安装配置 个人没进行配置。。。 创建vue-springboot-demo 本地localhost:8080就可以打开初始界</description>
    </item>
    
    <item>
      <title>进程和线程</title>
      <link>https://kongfany.github.io/post/python31%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Wed, 04 Aug 2021 14:42:06 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python31%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/</guid>
      <description>今天我们使用的计算机早已进入多CPU或多核时代，而我们使用的操作系统都是支持“多任务”的操作系统，这使得我们可以同时运行多个程序，也可以将一</description>
    </item>
    
    <item>
      <title>网络编程入门和网络应用开发</title>
      <link>https://kongfany.github.io/post/python30%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/</link>
      <pubDate>Tue, 03 Aug 2021 16:35:38 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python30%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/</guid>
      <description>网络编程入门 计算机网络基础 计算机网络是独立自主的计算机互联而成的系统的总称，组建计算机网络最主要的目的是实现多台计算机之间的通信和资源共享。</description>
    </item>
    
    <item>
      <title>Linux常用操作</title>
      <link>https://kongfany.github.io/post/linux%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 03 Aug 2021 16:03:16 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/linux%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
      <description>目录操作 ls：查看目录下文件和目录,蓝色字代表目录，白色代表文件 cd xx：进入目录xx cd .. :向上一级目录 cd - :回退到上一次目录 cd ~ :回到当前用</description>
    </item>
    
    <item>
      <title>解析HTML页面</title>
      <link>https://kongfany.github.io/post/python29%E8%A7%A3%E6%9E%90html%E9%A1%B5%E9%9D%A2/</link>
      <pubDate>Mon, 02 Aug 2021 16:42:20 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python29%E8%A7%A3%E6%9E%90html%E9%A1%B5%E9%9D%A2/</guid>
      <description>在上一课中我们讲到了使用Python获取网络资源，如果我们获取到一个或多个页面，需要从页面中提取出指定的信息，首先得掌握解析HTML页面的技</description>
    </item>
    
    <item>
      <title>获取网络数据</title>
      <link>https://kongfany.github.io/post/python28%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Mon, 02 Aug 2021 15:48:54 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python28%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE/</guid>
      <description>对于Python语言来说，一个较为擅长的领域就是网络数据采集，实现网络数据采集的程序通常称之为网络爬虫或蜘蛛程序。即便是在大数据时代，数据对</description>
    </item>
    
    <item>
      <title>操作PDF文件</title>
      <link>https://kongfany.github.io/post/python27%E6%93%8D%E4%BD%9Cpdf%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sat, 31 Jul 2021 21:17:33 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python27%E6%93%8D%E4%BD%9Cpdf%E6%96%87%E4%BB%B6/</guid>
      <description>PDF是Portable Document Format的缩写，这类文件通常使用.pdf作为其扩展名。在日常开发工作中，最容易遇到的就是从PDF中读取文本内容</description>
    </item>
    
    <item>
      <title>读写ExcelWord文件</title>
      <link>https://kongfany.github.io/post/python26%E8%AF%BB%E5%86%99excelword%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sat, 31 Jul 2021 19:44:34 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python26%E8%AF%BB%E5%86%99excelword%E6%96%87%E4%BB%B6/</guid>
      <description>Excel Python操作Excel需要三方库的支持，如果要兼容Excel 2007以前的版本，也就是xls格式的Excel文件，可以使用三方库xlr</description>
    </item>
    
    <item>
      <title>处理图像</title>
      <link>https://kongfany.github.io/post/python25%E5%A4%84%E7%90%86%E5%9B%BE%E5%83%8F/</link>
      <pubDate>Fri, 30 Jul 2021 19:08:52 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python25%E5%A4%84%E7%90%86%E5%9B%BE%E5%83%8F/</guid>
      <description>入门知识 颜色。如果你有使用颜料画画的经历，那么一定知道混合红、黄、蓝三种颜料可以得到其他的颜色，事实上这三种颜色就是美术中的三原色，它们是不</description>
    </item>
    
    <item>
      <title>正则表达式的应用</title>
      <link>https://kongfany.github.io/post/python24%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Thu, 29 Jul 2021 16:16:25 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python24%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>正则表达式相关知识 在编写处理字符串的程时，经常会遇到在一段文本中查找符合某些规则的字符串的需求，正则表达式就是用于描述这些规则的工具，换句话</description>
    </item>
    
    <item>
      <title>图形用户界面和游戏开发</title>
      <link>https://kongfany.github.io/post/python23%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/</link>
      <pubDate>Wed, 28 Jul 2021 22:20:26 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python23%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/</guid>
      <description>小恐龙 基于tkinter模块的GUI GUI是图形用户界面的缩写，图形化的用户界面对使用过计算机的人来说应该都不陌生，在此也无需进行赘述。Py</description>
    </item>
    
    <item>
      <title>校园导“游”系统的设计与实现</title>
      <link>https://kongfany.github.io/post/bishe/</link>
      <pubDate>Wed, 28 Jul 2021 17:53:19 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/bishe/</guid>
      <description>摘 要 随着各种地图App的推广，旅行更加具有自主性。但就目前而言，没有针对校园的导游系统。校园的导游系统，可以使得学生更方便的熟悉和了解校园以</description>
    </item>
    
    <item>
      <title>基础入门</title>
      <link>https://kongfany.github.io/post/springboot01/</link>
      <pubDate>Wed, 28 Jul 2021 16:46:04 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/springboot01/</guid>
      <description>尚硅谷：雷丰阳 Spring Initailizr 项目初始化向导 1 2 3 4 5 6 7 8 9 @RestController public class FirstController { @RequestMapping(&amp;#34;/hello&amp;#34;) public String handle01(){ return &amp;#34;Hello, Spring Boot 2!&amp;#34;; } } yaml 配置文件 示例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22</description>
    </item>
    
    <item>
      <title>文件读写和异常处理</title>
      <link>https://kongfany.github.io/post/python22%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</link>
      <pubDate>Tue, 27 Jul 2021 20:31:34 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python22%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</guid>
      <description>实际开发中常常会遇到对数据进行持久化的场景，所谓持久化是指将数据从无法长久保存数据的存储介质（通常是内存）转移到可以长久保存数据的存储介质（</description>
    </item>
    
    <item>
      <title>Python标准库初探</title>
      <link>https://kongfany.github.io/post/python21python%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Tue, 27 Jul 2021 11:48:24 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python21python%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/</guid>
      <description>base64 - Base64编解码模块 Base64是一种基于64个可打印字符来表示二进制数据的方法。由于$log _{2}64=6$，所以Base64以6</description>
    </item>
    
    <item>
      <title>函数的高级应用</title>
      <link>https://kongfany.github.io/post/python20%E5%87%BD%E6%95%B0%E7%9A%84%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/</link>
      <pubDate>Tue, 27 Jul 2021 10:12:56 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python20%E5%87%BD%E6%95%B0%E7%9A%84%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/</guid>
      <description>装饰器 装饰器是Python中用一个函数装饰另外一个函数或类并为其提供额外功能的语法现象。装饰器本身是一个函数，它的参数是被装饰的函数或类，它</description>
    </item>
    
    <item>
      <title>函数使用进阶</title>
      <link>https://kongfany.github.io/post/python19%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Mon, 26 Jul 2021 16:34:33 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python19%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E8%BF%9B%E9%98%B6/</guid>
      <description>关键字参数 下面是一个判断传入的三条边长能否构成三角形的函数，在调用函数传入参数时，我们可以指定参数名，也可以不指定参数名，代码如下所示。 1 2</description>
    </item>
    
    <item>
      <title>面向对象编程应用</title>
      <link>https://kongfany.github.io/post/python18%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 19 Jul 2021 16:28:18 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python18%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%BA%94%E7%94%A8/</guid>
      <description>奥特曼打小怪兽 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63</description>
    </item>
    
    <item>
      <title>面向对象编程进阶</title>
      <link>https://kongfany.github.io/post/python17%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Sun, 18 Jul 2021 23:04:34 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python17%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E8%BF%9B%E9%98%B6/</guid>
      <description>可见性和属性装饰器 在很多面向对象编程语言中，对象的属性通常会被设置为私有（private）或受保护（protected）的成员，简单的说就是</description>
    </item>
    
    <item>
      <title>面向对象编程入门</title>
      <link>https://kongfany.github.io/post/python16%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 18 Jul 2021 22:10:54 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python16%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%85%A5%E9%97%A8/</guid>
      <description>面向对象：&amp;quot;把一组数据结构和处理它们的方法组成对象（object），把相同行为的对象归纳为类（class），通过类的封装（enca</description>
    </item>
    
    <item>
      <title>字典</title>
      <link>https://kongfany.github.io/post/python15%E5%AD%97%E5%85%B8/</link>
      <pubDate>Tue, 13 Jul 2021 15:51:19 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python15%E5%AD%97%E5%85%B8/</guid>
      <description>迄今为止，我们已经为大家介绍了Python中的三种容器型数据类型，但是这些数据类型还不足以帮助我们解决所有的问题。例如，我们要保存一个人的信</description>
    </item>
    
    <item>
      <title>集合</title>
      <link>https://kongfany.github.io/post/python14%E9%9B%86%E5%90%88/</link>
      <pubDate>Mon, 12 Jul 2021 19:18:40 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python14%E9%9B%86%E5%90%88/</guid>
      <description>在学习了列表和元组之后，我们再来学习一种容器型的数据类型，它的名字叫集合（set）。通常我们对集合的定义是“把一定范围的、确定的、可以区别的</description>
    </item>
    
    <item>
      <title>列表和元组的应用</title>
      <link>https://kongfany.github.io/post/python13%E5%88%97%E8%A1%A8%E5%92%8C%E5%85%83%E7%BB%84%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Sun, 11 Jul 2021 16:39:00 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python13%E5%88%97%E8%A1%A8%E5%92%8C%E5%85%83%E7%BB%84%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>最大值最小值 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 &amp;#34;&amp;#34;&amp;#34; 找出列表中最大或最小的元素 &amp;#34;&amp;#34;&amp;#34; def main(): fruits = [&amp;#39;grape&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;strawberry&amp;#39;, &amp;#39;waxberry&amp;#39;, &amp;#39;pitaya&amp;#39;] # 直接使用内置的max和min函数找</description>
    </item>
    
    <item>
      <title>元组</title>
      <link>https://kongfany.github.io/post/python12%E5%85%83%E7%BB%84/</link>
      <pubDate>Fri, 09 Jul 2021 17:42:21 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python12%E5%85%83%E7%BB%84/</guid>
      <description>上一节课为大家讲解了Python中的列表，它是一种容器型数据类型，我们可以通过定义列表类型的变量来保存和操作多个元素。当然，Python中容</description>
    </item>
    
    <item>
      <title>列表</title>
      <link>https://kongfany.github.io/post/python11%E5%88%97%E8%A1%A8/</link>
      <pubDate>Fri, 09 Jul 2021 15:15:40 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python11%E5%88%97%E8%A1%A8/</guid>
      <description>在Python中我们可以通过容器类型的变量来保存和操作多个数据，我们首先为大家介绍列表（list）这种新的数据类型。 定义和使用列表 在Pyth</description>
    </item>
    
    <item>
      <title>函数和字符串的应用</title>
      <link>https://kongfany.github.io/post/python10%E5%87%BD%E6%95%B0%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Fri, 09 Jul 2021 10:23:46 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python10%E5%87%BD%E6%95%B0%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>为什么字符串类型（str）可以通过调用方法的方式进行操作，而之前我们用到的数值类型（如int、float）却没有可以调用的方法。在Pytho</description>
    </item>
    
    <item>
      <title>字符串</title>
      <link>https://kongfany.github.io/post/python09%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Thu, 08 Jul 2021 21:35:20 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python09%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>字符串的定义 所谓字符串，就是由零个或多个字符组成的有限序列。 在Python程序中，如果我们把单个或多个字符用单引号或者双引号包围起来，就可以</description>
    </item>
    
    <item>
      <title>函数和模块</title>
      <link>https://kongfany.github.io/post/python08%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Thu, 08 Jul 2021 16:36:30 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python08%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97/</guid>
      <description>函数的作用 “代码有很多种坏味道，重复是最坏的一种！”。要写出高质量的代码首先要解决的就是重复代码的问题。我们可以将计算阶乘的功能封装到一个称</description>
    </item>
    
    <item>
      <title>分支和循环结构的应用</title>
      <link>https://kongfany.github.io/post/python07%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Thu, 08 Jul 2021 10:23:22 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python07%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>经典案例 例1：寻找水仙花数 水仙花数也被称为超完全数字不变数、自恋数、自幂数、阿姆斯特朗数，它是一个3位数，该数字每个位上数字的立方之和正好等</description>
    </item>
    
    <item>
      <title>循环结构</title>
      <link>https://kongfany.github.io/post/python06%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</link>
      <pubDate>Wed, 07 Jul 2021 21:00:49 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python06%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</guid>
      <description>for-in循环 如果明确的知道循环执行的次数，推荐使用for-in循环。被for-in循环控制的语句块也是通过缩进的方式来确定的。 1 2 3 4 5</description>
    </item>
    
    <item>
      <title>分支结构</title>
      <link>https://kongfany.github.io/post/python05%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/</link>
      <pubDate>Wed, 07 Jul 2021 16:13:31 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python05%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/</guid>
      <description>分支结构也叫选择结构。 if语句的使用 在Python中，要构造分支结构可以使用if、elif和else关键字。所谓关键字就是有特殊含义的单词，</description>
    </item>
    
    <item>
      <title>Python语言元素之运算符</title>
      <link>https://kongfany.github.io/post/python04%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Tue, 06 Jul 2021 16:32:59 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python04%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>运算符 以下表格是按照运算符的优先级从上到下列出的。所谓优先级，就是在同一个运算的表达式中，如果出现了多个运算符，应该先执行哪个运算再执行哪个</description>
    </item>
    
    <item>
      <title>Python语言元素之变量</title>
      <link>https://kongfany.github.io/post/python03%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E5%8F%98%E9%87%8F/</link>
      <pubDate>Tue, 06 Jul 2021 15:18:30 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python03%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E5%8F%98%E9%87%8F/</guid>
      <description>变量和类型 变量是数据的载体，简单来说就是一块来保存数据的内存空间，变量的值可以被读取和修改。 Python中数据类型很多，而且允许我们自定义新</description>
    </item>
    
    <item>
      <title>PyCharm2021使用教程</title>
      <link>https://kongfany.github.io/post/python02pycharm2021%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 05 Jul 2021 15:16:19 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/python02pycharm2021%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid>
      <description>下载安装 看前一篇 界面/菜单栏介绍 界面及常用操作介绍 代码补全 file-&amp;gt;settings,找到editor-&amp;gt;general-&amp;g</description>
    </item>
    
    <item>
      <title>Pyhon初识及安装</title>
      <link>https://kongfany.github.io/post/pyhon01%E5%88%9D%E8%AF%86%E5%8F%8A%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sun, 04 Jul 2021 16:39:31 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/pyhon01%E5%88%9D%E8%AF%86%E5%8F%8A%E5%AE%89%E8%A3%85/</guid>
      <description>Python介绍 Python是一种广泛使用的解释型、高级编程语言。python有3.x和2.x量大版本，并且不兼容（使用3.x） 解释型&amp;md</description>
    </item>
    
    <item>
      <title>Planfor202107</title>
      <link>https://kongfany.github.io/post/planfor202107/</link>
      <pubDate>Fri, 02 Jul 2021 14:53:51 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/planfor202107/</guid>
      <description>六级 直接刷题 Python 慕课嵩天 《廖雪峰Python教程》：最好的Python入门教程。 https://github.com/jackfrued/Python-100-Days 基础版：https://github.com/jackfru</description>
    </item>
    
    <item>
      <title>Github</title>
      <link>https://kongfany.github.io/post/github/</link>
      <pubDate>Wed, 16 Jun 2021 21:06:47 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/github/</guid>
      <description>Github使用教程 专栏讲解 界面介绍 仓库管理 Git下载安装 下载提交代码 Git进阶 提交文件夹 Git 1.下载安装 下载安装好之后。打开GitBash查</description>
    </item>
    
    <item>
      <title>CET6</title>
      <link>https://kongfany.github.io/post/cet6/</link>
      <pubDate>Tue, 08 Jun 2021 19:31:20 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/cet6/</guid>
      <description>2021年6月六级救命班 做题顺序 仔细阅读（20min），长篇阅读（15min），翻译（25min），选词填空 写作+翻译 写作翻译的保底原则： 单</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://kongfany.github.io/post/my-first-post/</link>
      <pubDate>Sat, 05 Jun 2021 15:48:11 +0800</pubDate>
      
      <guid>https://kongfany.github.io/post/my-first-post/</guid>
      <description>hugo创建blog &#34;可以加类似于引言的格式-- 网工172-陈迪荣 2021/6/5 9:48:03 搭建博客可以看这篇下面的reference： https://www.lttzz.cn/post/hello-world/ https://olowolo.com/post/hugo-quick-start/ hugo new不是可以新建博</description>
    </item>
    
  </channel>
</rss>
